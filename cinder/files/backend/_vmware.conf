
[{{ backend_name }}]

volume_driver = cinder.volume.drivers.vmware.vmdk.VMwareVcVmdkDriver
volume_backend_name={{ backend_name }}

# IP address for connecting to VMware vCenter server. (string value)
#vmware_host_ip = <None>
{%- if backend.host_ip is defined %}
vmware_host_ip = {{ backend.host_ip }}
{%- endif %}


# Port number for connecting to VMware vCenter server. (port value)
# Minimum value: 0
# Maximum value: 65535
#vmware_host_port = 443
{%- if backend.host_port is defined %}
vmware_host_port = {{ backend.host_port }}
{%- endif %}

# Username for authenticating with VMware vCenter server. (string value)
#vmware_host_username = <None>
vmware_host_username = {{ backend.host_username }}

# Password for authenticating with VMware vCenter server. (string value)
#vmware_host_password = <None>
vmware_host_password = {{ backend.host_password }}


# Optional VIM service WSDL Location e.g http://<server>/vimService.wsdl.
# Optional over-ride to default location for bug work-arounds. (string value)
#vmware_wsdl_location = <None>
{%- if backend.wsdl_location is defined %}
vmware_wsdl_location = {{ backend.wsdl_location }}
{%- endif %}

# Number of times VMware vCenter server API must be retried upon connection
# related issues. (integer value)
#vmware_api_retry_count = 10
{%- if backend.api_retry_count is defined %}
vmware_api_retry_count = {{ backend.api_retry_count }}
{%- endif %}

# The interval (in seconds) for polling remote tasks invoked on VMware vCenter
# server. (floating point value)
#vmware_task_poll_interval = 2.0
{%- if backend.task_poll_interval is defined %}
vmware_task_poll_interval = {{ backend.task_poll_interval }}
{%- endif %}

# Name of the vCenter inventory folder that will contain Cinder volumes. This
# folder will be created under "OpenStack/<project_folder>", where
# project_folder is of format "Project (<volume_project_id>)". (string value)
#vmware_volume_folder = Volumes
{%- if backend.volume_folder is defined %}
vmware_volume_folder = {{ backend.volume_folder }}
{%- endif %}

# Timeout in seconds for VMDK volume transfer between Cinder and Glance.
# (integer value)
#vmware_image_transfer_timeout_secs = 7200
{%- if backend.image_transfer_timeout_secs is defined %}
vmware_image_transfer_timeout_secs = {{ backend.image_transfer_timeout_secs }}
{%- endif %}

# Max number of objects to be retrieved per batch. Query results will be
# obtained in batches from the server and not in one shot. Server may still
# limit the count to something less than the configured value. (integer value)
#vmware_max_objects_retrieval = 100
{%- if backend.max_objects_retrieval is defined %}
vmware_max_objects_retrieval = {{ backend.max_objects_retrieval }}
{%- endif %}

# Optional string specifying the VMware vCenter server version. The driver
# attempts to retrieve the version from VMware vCenter server. Set this
# configuration only if you want to override the vCenter server version.
# (string value)
#vmware_host_version = <None>
{%- if backend.host_version is defined %}
vmware_host_version = {{ backend.host_version }}
{%- endif %}

# Directory where virtual disks are stored during volume backup and restore.
# (string value)
#vmware_tmp_dir = /tmp
{%- if backend.tmp_dir is defined %}
vmware_tmp_dir = {{ backend.tmp_dir }}
{%- endif %}

# CA bundle file to use in verifying the vCenter server certificate. (string
# value)
#vmware_ca_file = <None>
{%- if backend.cacert_file is defined %}
vmware_ca_file = {{ backend.cacert_file }}
{%- endif %}

# If true, the vCenter server certificate is not verified. If false, then the
# default CA truststore is used for verification. This option is ignored if
# "vmware_ca_file" is set. (boolean value)
#vmware_insecure = false
{%- if backend.insecure is defined %}
vmware_insecure = {{ backend.insecure }}
{%- endif %}

# Name of a vCenter compute cluster where volumes should be created. (multi
# valued)
#vmware_cluster_name =
{%- for cluster_name in backend.cluster_names.split(',') %}
vmware_cluster_name = {{ cluster_name }}
{%- endfor %}

# Maximum number of connections in http connection pool. (integer value)
#vmware_connection_pool_size = 10
{%- if backend.connection_pool_size is defined %}
vmware_connection_pool_size = {{ backend.connection_pool_size }}
{%- endif %}

# Default adapter type to be used for attaching volumes. (string value)
# Allowed values: lsiLogic, busLogic, lsiLogicsas, paraVirtual, ide
#vmware_adapter_type = lsiLogic
{%- if backend.adapter_type is defined %}
vmware_adapter_type = {{ backend.adapter_type }}
{%- endif %}
